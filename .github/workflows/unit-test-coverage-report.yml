# # Simple workflow for deploying static content to GitHub Pages
# name: Run Test and Deploy test report to Pages

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ['master']

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow one concurrent deployment
# concurrency:
#   group: 'pages'
#   cancel-in-progress: true

# jobs:
#   unit-tests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Set up node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - name: Install dependencies
#         run: npm install

#       - name: Run unit test and Generate report
#         run: npm run test

#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         if: success() || failure()
#         with:
#           # Upload test report only
#           name: github-pages
#           path: test-result/

#       - name: Display structure of downloaded files
#         run: ls && pwd && echo $GITHUB_OUTPUT

#   # Single deploy job since we're just deploying
#   deploy:
#     runs-on: ubuntu-latest
#     if: ${{ always() }}
#     needs: [unit-tests]
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}

#     steps:
#       - name: Download test report
#         uses: actions/download-artifact@v3
#         with:
#           name: github-pages
#           path: test-result/

#       # - name: Place artifacts
#       #   shell: bash
#       #   run: |
#       #       mv test-result/* ../

#       - name: Display structure of downloaded files
#         run: ls -R && pwd && echo $GITHUB_OUTPUT

#       - name: Setup Pages
#         uses: actions/configure-pages@v3

#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           # Upload test report only
#           name: github-pages
#           path: test-result/

#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v2

#       # - name: Override page_url
#       #   id: change-page-url
#       #   run: echo "new_page_url=${{ steps.deployment.outputs.page_url }}report/" >> $GITHUB_OUTPUT
